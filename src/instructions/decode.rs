use std::{fmt, num::Wrapping};

use crate::{
    conditions::Condition,
    machine::Machine,
    registers::{R16, R8},
};

use super::type_def::{Immediate16, Instruction};

#[derive(Clone, Debug)]
pub struct DecodedInstruction {
    pub address: Wrapping<u16>,
    pub instruction: Instruction,
    pub instruction_size: u8,
    pub raw: Vec<Wrapping<u8>>,
}

impl fmt::Display for DecodedInstruction {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        write!(f, "{}", self.as_string())
    }
}

impl DecodedInstruction {
    pub fn display_raw(&self) -> String {
        let mut res = String::new();
        for b in &self.raw {
            res.push_str(&format!("{:02X} ", b));
        }
        res
    }
}

pub fn decode_instruction_at_address(
    machine: &Machine,
    address: Wrapping<u16>,
) -> Result<DecodedInstruction, String> {
    let mut bytes_read: u16 = 0;
    let next_i8 = |bytes_read: &mut u16| {
        let o = *bytes_read;
        *bytes_read += 1;
        Wrapping(machine.read_u8(address + Wrapping(o)).0 as i8)
    };
    let next_u8 = |bytes_read: &mut u16| {
        let o = *bytes_read;
        *bytes_read += 1;
        machine.read_u8(address + Wrapping(o))
    };
    let next_imm16 = |bytes_read: &mut u16| {
        let o = *bytes_read;
        *bytes_read += 2;
        Immediate16::from_memory(machine, address + Wrapping(o))
    };
    let i = match next_u8(&mut bytes_read).0 {
        0x00 => Instruction::NOP,
        0x01 => Instruction::LD_r16_d16(R16::BC, next_imm16(&mut bytes_read)),
        0x02 => Instruction::LD_mr16_r8(R16::BC, R8::A),
        0x03 => Instruction::INC_r16(R16::BC),
        0x04 => Instruction::INC_r8(R8::B),
        0x05 => Instruction::DEC_r8(R8::B),
        0x06 => Instruction::LD_r8_u8(R8::B, next_u8(&mut bytes_read)),
        0x07 => Instruction::RLCA,
        0x08 => Instruction::LD_mu16_SP(next_imm16(&mut bytes_read)),
        0x09 => Instruction::ADD_HL_r16(R16::BC),
        0x0A => todo!(),
        0x0B => Instruction::DEC_r16(R16::BC),
        0x0C => Instruction::INC_r8(R8::C),
        0x0D => Instruction::DEC_r8(R8::C),
        0x0E => Instruction::LD_r8_u8(R8::C, next_u8(&mut bytes_read)),
        0x0F => Instruction::RRCA,

        0x10 => todo!(),
        0x11 => Instruction::LD_r16_d16(R16::DE, next_imm16(&mut bytes_read)),
        0x12 => Instruction::LD_mr16_r8(R16::DE, R8::A),
        0x13 => Instruction::INC_r16(R16::DE),
        0x14 => Instruction::INC_r8(R8::D),
        0x15 => Instruction::DEC_r8(R8::D),
        0x16 => Instruction::LD_r8_u8(R8::D, next_u8(&mut bytes_read)),
        0x17 => Instruction::RLA,
        0x18 => Instruction::JR_i8(next_i8(&mut bytes_read)),
        0x19 => Instruction::ADD_HL_r16(R16::DE),
        0x1A => Instruction::LD_r8_mr16(R8::A, R16::DE),
        0x1B => Instruction::DEC_r16(R16::DE),
        0x1C => Instruction::INC_r8(R8::E),
        0x1D => Instruction::DEC_r8(R8::E),
        0x1E => Instruction::LD_r8_u8(R8::E, next_u8(&mut bytes_read)),
        0x1F => Instruction::RRA,

        0x20 => Instruction::JR_cc_i8(Condition::NZ, next_i8(&mut bytes_read)),
        0x21 => Instruction::LD_r16_d16(R16::HL, next_imm16(&mut bytes_read)),
        0x22 => Instruction::LD_mHLinc_A,
        0x23 => Instruction::INC_r16(R16::HL),
        0x24 => Instruction::INC_r8(R8::H),
        0x25 => Instruction::DEC_r8(R8::H),
        0x26 => Instruction::LD_r8_u8(R8::H, next_u8(&mut bytes_read)),
        0x27 => todo!(),
        0x28 => Instruction::JR_cc_i8(Condition::Z, next_i8(&mut bytes_read)),
        0x29 => Instruction::ADD_HL_r16(R16::HL),
        0x2A => Instruction::LD_A_mHLinc,
        0x2B => Instruction::DEC_r16(R16::HL),
        0x2C => Instruction::INC_r8(R8::L),
        0x2D => Instruction::DEC_r8(R8::L),
        0x2E => Instruction::LD_r8_u8(R8::L, next_u8(&mut bytes_read)),
        0x2F => Instruction::CPL,

        0x30 => Instruction::JR_cc_i8(Condition::NC, next_i8(&mut bytes_read)),
        0x31 => Instruction::LD_SP_u16(next_imm16(&mut bytes_read)),
        0x32 => Instruction::LD_mHLdec_A,
        0x33 => Instruction::INC_r16(R16::SP),
        0x34 => Instruction::INC_mHL,
        0x35 => Instruction::DEC_mHL,
        0x36 => Instruction::LD_mHL_u8(next_u8(&mut bytes_read)),
        0x37 => Instruction::SCF,
        0x38 => Instruction::JR_cc_i8(Condition::C, next_i8(&mut bytes_read)),
        0x39 => Instruction::ADD_HL_r16(R16::SP),
        0x3A => Instruction::LD_A_mHLdec,
        0x3B => Instruction::DEC_r16(R16::SP),
        0x3C => Instruction::INC_r8(R8::A),
        0x3D => Instruction::DEC_r8(R8::A),
        0x3E => Instruction::LD_r8_u8(R8::A, next_u8(&mut bytes_read)),
        0x3F => Instruction::CCF,

        0x40 => Instruction::LD_r8_r8(R8::B, R8::B),
        0x41 => Instruction::LD_r8_r8(R8::B, R8::C),
        0x42 => Instruction::LD_r8_r8(R8::B, R8::D),
        0x43 => Instruction::LD_r8_r8(R8::B, R8::E),
        0x44 => Instruction::LD_r8_r8(R8::B, R8::H),
        0x45 => Instruction::LD_r8_r8(R8::B, R8::L),
        0x46 => Instruction::LD_r8_mr16(R8::B, R16::HL),
        0x47 => Instruction::LD_r8_r8(R8::B, R8::A),
        0x48 => Instruction::LD_r8_r8(R8::C, R8::B),
        0x49 => Instruction::LD_r8_r8(R8::C, R8::C),
        0x4A => Instruction::LD_r8_r8(R8::C, R8::D),
        0x4B => Instruction::LD_r8_r8(R8::C, R8::E),
        0x4C => Instruction::LD_r8_r8(R8::C, R8::H),
        0x4D => Instruction::LD_r8_r8(R8::C, R8::L),
        0x4E => Instruction::LD_r8_mr16(R8::C, R16::HL),
        0x4F => Instruction::LD_r8_r8(R8::C, R8::A),

        0x50 => Instruction::LD_r8_r8(R8::D, R8::B),
        0x51 => Instruction::LD_r8_r8(R8::D, R8::C),
        0x52 => Instruction::LD_r8_r8(R8::D, R8::D),
        0x53 => Instruction::LD_r8_r8(R8::D, R8::E),
        0x54 => Instruction::LD_r8_r8(R8::D, R8::H),
        0x55 => Instruction::LD_r8_r8(R8::D, R8::L),
        0x56 => Instruction::LD_r8_mr16(R8::D, R16::HL),
        0x57 => Instruction::LD_r8_r8(R8::D, R8::A),
        0x58 => Instruction::LD_r8_r8(R8::E, R8::B),
        0x59 => Instruction::LD_r8_r8(R8::E, R8::C),
        0x5A => Instruction::LD_r8_r8(R8::E, R8::D),
        0x5B => Instruction::LD_r8_r8(R8::E, R8::E),
        0x5C => Instruction::LD_r8_r8(R8::E, R8::H),
        0x5D => Instruction::LD_r8_r8(R8::E, R8::L),
        0x5E => Instruction::LD_r8_mr16(R8::E, R16::HL),
        0x5F => Instruction::LD_r8_r8(R8::E, R8::A),

        0x60 => Instruction::LD_r8_r8(R8::H, R8::B),
        0x61 => Instruction::LD_r8_r8(R8::H, R8::C),
        0x62 => Instruction::LD_r8_r8(R8::H, R8::D),
        0x63 => Instruction::LD_r8_r8(R8::H, R8::E),
        0x64 => Instruction::LD_r8_r8(R8::H, R8::H),
        0x65 => Instruction::LD_r8_r8(R8::H, R8::L),
        0x66 => Instruction::LD_r8_mr16(R8::H, R16::HL),
        0x67 => Instruction::LD_r8_r8(R8::H, R8::A),
        0x68 => Instruction::LD_r8_r8(R8::L, R8::B),
        0x69 => Instruction::LD_r8_r8(R8::L, R8::C),
        0x6A => Instruction::LD_r8_r8(R8::L, R8::D),
        0x6B => Instruction::LD_r8_r8(R8::L, R8::E),
        0x6C => Instruction::LD_r8_r8(R8::L, R8::H),
        0x6D => Instruction::LD_r8_r8(R8::L, R8::L),
        0x6E => Instruction::LD_r8_mr16(R8::L, R16::HL),
        0x6F => Instruction::LD_r8_r8(R8::L, R8::A),

        0x70 => Instruction::LD_mr16_r8(R16::HL, R8::B),
        0x71 => Instruction::LD_mr16_r8(R16::HL, R8::C),
        0x72 => Instruction::LD_mr16_r8(R16::HL, R8::D),
        0x73 => Instruction::LD_mr16_r8(R16::HL, R8::E),
        0x74 => Instruction::LD_mr16_r8(R16::HL, R8::H),
        0x75 => Instruction::LD_mr16_r8(R16::HL, R8::L),
        0x76 => todo!(),
        0x77 => Instruction::LD_mr16_r8(R16::HL, R8::A),
        0x78 => Instruction::LD_r8_r8(R8::A, R8::B),
        0x79 => Instruction::LD_r8_r8(R8::A, R8::C),
        0x7A => Instruction::LD_r8_r8(R8::A, R8::D),
        0x7B => Instruction::LD_r8_r8(R8::A, R8::E),
        0x7C => Instruction::LD_r8_r8(R8::A, R8::H),
        0x7D => Instruction::LD_r8_r8(R8::A, R8::L),
        0x7E => Instruction::LD_A_mHL,
        0x7F => Instruction::LD_r8_r8(R8::A, R8::A),

        0x80 => Instruction::ADD_A_r8(R8::B),
        0x81 => Instruction::ADD_A_r8(R8::C),
        0x82 => Instruction::ADD_A_r8(R8::D),
        0x83 => Instruction::ADD_A_r8(R8::E),
        0x84 => Instruction::ADD_A_r8(R8::H),
        0x85 => Instruction::ADD_A_r8(R8::L),
        0x86 => Instruction::ADD_A_mHL,
        0x87 => Instruction::ADD_A_r8(R8::A),
        0x88 => Instruction::ADC_A_r8(R8::B),
        0x89 => Instruction::ADC_A_r8(R8::C),
        0x8A => Instruction::ADC_A_r8(R8::D),
        0x8B => Instruction::ADC_A_r8(R8::E),
        0x8C => Instruction::ADC_A_r8(R8::H),
        0x8D => Instruction::ADC_A_r8(R8::L),
        0x8E => todo!(), // Instruction::ADC_A_mHL,
        0x8F => Instruction::ADC_A_r8(R8::A),

        0x90 => Instruction::SUB_A_r8(R8::B),
        0x91 => Instruction::SUB_A_r8(R8::C),
        0x92 => Instruction::SUB_A_r8(R8::D),
        0x93 => Instruction::SUB_A_r8(R8::E),
        0x94 => Instruction::SUB_A_r8(R8::H),
        0x95 => Instruction::SUB_A_r8(R8::L),
        0x96 => todo!(), // Instruction::SUB_A_mHL,
        0x97 => Instruction::SUB_A_r8(R8::A),
        0x98 => Instruction::SBC_A_r8(R8::B),
        0x99 => Instruction::SBC_A_r8(R8::C),
        0x9A => Instruction::SBC_A_r8(R8::D),
        0x9B => Instruction::SBC_A_r8(R8::E),
        0x9C => Instruction::SBC_A_r8(R8::H),
        0x9D => Instruction::SBC_A_r8(R8::L),
        0x9E => todo!(), // Instruction::SBC_A_mHL,
        0x9F => Instruction::SBC_A_r8(R8::A),

        0xA0 => Instruction::AND_r8(R8::B),
        0xA1 => Instruction::AND_r8(R8::C),
        0xA2 => Instruction::AND_r8(R8::D),
        0xA3 => Instruction::AND_r8(R8::E),
        0xA4 => Instruction::AND_r8(R8::H),
        0xA5 => Instruction::AND_r8(R8::L),
        0xA6 => todo!(), // Instruction::AND_r8_mHL,
        0xA7 => Instruction::AND_r8(R8::A),
        0xA8 => Instruction::XOR_A_r8(R8::B),
        0xA9 => Instruction::XOR_A_r8(R8::C),
        0xAA => Instruction::XOR_A_r8(R8::D),
        0xAB => Instruction::XOR_A_r8(R8::E),
        0xAC => Instruction::XOR_A_r8(R8::H),
        0xAD => Instruction::XOR_A_r8(R8::L),
        0xAE => Instruction::XOR_A_mHL,
        0xAF => Instruction::XOR_A_r8(R8::A),

        0xB0 => Instruction::OR_A_r8(R8::B),
        0xB1 => Instruction::OR_A_r8(R8::C),
        0xB2 => Instruction::OR_A_r8(R8::D),
        0xB3 => Instruction::OR_A_r8(R8::E),
        0xB4 => Instruction::OR_A_r8(R8::H),
        0xB5 => Instruction::OR_A_r8(R8::L),
        0xB6 => Instruction::OR_A_mHL,
        0xB7 => Instruction::OR_A_r8(R8::A),
        0xB8 => Instruction::CP_A_r8(R8::B),
        0xB9 => Instruction::CP_A_r8(R8::C),
        0xBA => Instruction::CP_A_r8(R8::D),
        0xBB => Instruction::CP_A_r8(R8::E),
        0xBC => Instruction::CP_A_r8(R8::H),
        0xBD => Instruction::CP_A_r8(R8::L),
        0xBE => Instruction::CP_A_mHL,
        0xBF => Instruction::CP_A_r8(R8::A),

        0xC0 => Instruction::RET_cc(Condition::NZ),
        0xC1 => Instruction::POP_r16(R16::BC),
        0xC2 => Instruction::JP_cc_u16(Condition::NZ, next_imm16(&mut bytes_read)),
        0xC3 => Instruction::JP_u16(next_imm16(&mut bytes_read)),
        0xC4 => Instruction::CALL_cc_u16(Condition::NZ, next_imm16(&mut bytes_read)),
        0xC5 => Instruction::PUSH_r16(R16::BC),
        0xC6 => Instruction::ADD_A_u8(next_u8(&mut bytes_read)),
        0xC7 => Instruction::RST(Immediate16::from_u16(Wrapping(0x0000))),
        0xC8 => Instruction::RET_cc(Condition::Z),
        0xC9 => Instruction::RET,
        0xCA => Instruction::JP_cc_u16(Condition::Z, next_imm16(&mut bytes_read)),
        0xCB => match next_u8(&mut bytes_read).0 {
            0x00 => Instruction::RLC_r8(R8::B),
            0x01 => Instruction::RLC_r8(R8::C),
            0x02 => Instruction::RLC_r8(R8::D),
            0x03 => Instruction::RLC_r8(R8::E),
            0x04 => Instruction::RLC_r8(R8::H),
            0x05 => Instruction::RLC_r8(R8::L),
            0x06 => todo!(),
            0x07 => Instruction::RLC_r8(R8::A),
            0x08 => Instruction::RRC_r8(R8::B),
            0x09 => Instruction::RRC_r8(R8::C),
            0x0A => Instruction::RRC_r8(R8::D),
            0x0B => Instruction::RRC_r8(R8::E),
            0x0C => Instruction::RRC_r8(R8::H),
            0x0D => Instruction::RRC_r8(R8::L),
            0x0E => todo!(), // Instruction::RRC_r8(R8::),
            0x0F => Instruction::RRC_r8(R8::A),

            0x10 => Instruction::RL_r8(R8::B),
            0x11 => Instruction::RL_r8(R8::C),
            0x12 => Instruction::RL_r8(R8::D),
            0x13 => Instruction::RL_r8(R8::E),
            0x14 => Instruction::RL_r8(R8::H),
            0x15 => Instruction::RL_r8(R8::L),
            0x16 => todo!(),
            0x17 => todo!(),
            0x18 => Instruction::RR_r8(R8::B),
            0x19 => Instruction::RR_r8(R8::C),
            0x1A => Instruction::RR_r8(R8::D),
            0x1B => Instruction::RR_r8(R8::E),
            0x1C => Instruction::RR_r8(R8::H),
            0x1D => Instruction::RR_r8(R8::L),
            0x1E => todo!(),
            0x1F => Instruction::RR_r8(R8::A),

            0x20 => todo!(),
            0x21 => todo!(),
            0x22 => todo!(),
            0x23 => todo!(),
            0x24 => todo!(),
            0x25 => todo!(),
            0x26 => todo!(),
            0x27 => todo!(),
            0x28 => todo!(),
            0x29 => todo!(),
            0x2A => todo!(),
            0x2B => todo!(),
            0x2C => todo!(),
            0x2D => todo!(),
            0x2E => todo!(),
            0x2F => todo!(),

            0x30 => todo!(),
            0x31 => todo!(),
            0x32 => todo!(),
            0x33 => todo!(),
            0x34 => todo!(),
            0x35 => todo!(),
            0x36 => todo!(),
            0x37 => todo!(),
            0x38 => Instruction::SRL_r8(R8::B),
            0x39 => todo!(),
            0x3A => todo!(),
            0x3B => todo!(),
            0x3C => todo!(),
            0x3D => todo!(),
            0x3E => todo!(),
            0x3F => todo!(),

            0x40 => Instruction::BIT_u3_r8(0, R8::B),
            0x41 => Instruction::BIT_u3_r8(0, R8::C),
            0x42 => Instruction::BIT_u3_r8(0, R8::D),
            0x43 => Instruction::BIT_u3_r8(0, R8::E),
            0x44 => Instruction::BIT_u3_r8(0, R8::H),
            0x45 => Instruction::BIT_u3_r8(0, R8::L),
            0x46 => todo!(), // Instruction::BIT_u3_mHL,
            0x47 => Instruction::BIT_u3_r8(0, R8::A),
            0x48 => Instruction::BIT_u3_r8(1, R8::B),
            0x49 => Instruction::BIT_u3_r8(1, R8::C),
            0x4A => Instruction::BIT_u3_r8(1, R8::D),
            0x4B => Instruction::BIT_u3_r8(1, R8::E),
            0x4C => Instruction::BIT_u3_r8(1, R8::H),
            0x4D => Instruction::BIT_u3_r8(1, R8::L),
            0x4E => todo!(), // Instruction::BIT_u3_r8_mHL,
            0x4F => Instruction::BIT_u3_r8(1, R8::A),

            0x50 => Instruction::BIT_u3_r8(2, R8::B),
            0x51 => Instruction::BIT_u3_r8(2, R8::C),
            0x52 => Instruction::BIT_u3_r8(2, R8::D),
            0x53 => Instruction::BIT_u3_r8(2, R8::E),
            0x54 => Instruction::BIT_u3_r8(2, R8::H),
            0x55 => Instruction::BIT_u3_r8(2, R8::L),
            0x56 => todo!(), // Instruction::BIT_u3_mHL,
            0x57 => Instruction::BIT_u3_r8(2, R8::A),
            0x58 => Instruction::BIT_u3_r8(3, R8::B),
            0x59 => Instruction::BIT_u3_r8(3, R8::C),
            0x5A => Instruction::BIT_u3_r8(3, R8::D),
            0x5B => Instruction::BIT_u3_r8(3, R8::E),
            0x5C => Instruction::BIT_u3_r8(3, R8::H),
            0x5D => Instruction::BIT_u3_r8(3, R8::L),
            0x5E => todo!(), // Instruction::BIT_u3_r8_mHL,
            0x5F => Instruction::BIT_u3_r8(3, R8::A),

            0x60 => Instruction::BIT_u3_r8(4, R8::B),
            0x61 => Instruction::BIT_u3_r8(4, R8::C),
            0x62 => Instruction::BIT_u3_r8(4, R8::D),
            0x63 => Instruction::BIT_u3_r8(4, R8::E),
            0x64 => Instruction::BIT_u3_r8(4, R8::H),
            0x65 => Instruction::BIT_u3_r8(4, R8::L),
            0x66 => todo!(), // Instruction::BIT_u3_mHL,
            0x67 => Instruction::BIT_u3_r8(4, R8::A),
            0x68 => Instruction::BIT_u3_r8(5, R8::B),
            0x69 => Instruction::BIT_u3_r8(5, R8::C),
            0x6A => Instruction::BIT_u3_r8(5, R8::D),
            0x6B => Instruction::BIT_u3_r8(5, R8::E),
            0x6C => Instruction::BIT_u3_r8(5, R8::H),
            0x6D => Instruction::BIT_u3_r8(5, R8::L),
            0x6E => todo!(), // Instruction::BIT_u3_r8_mHL,
            0x6F => Instruction::BIT_u3_r8(5, R8::A),

            0x70 => Instruction::BIT_u3_r8(6, R8::B),
            0x71 => Instruction::BIT_u3_r8(6, R8::C),
            0x72 => Instruction::BIT_u3_r8(6, R8::D),
            0x73 => Instruction::BIT_u3_r8(6, R8::E),
            0x74 => Instruction::BIT_u3_r8(6, R8::H),
            0x75 => Instruction::BIT_u3_r8(6, R8::L),
            0x76 => todo!(), // Instruction::BIT_u3_mHL(6),
            0x77 => Instruction::BIT_u3_r8(6, R8::A),
            0x78 => Instruction::BIT_u3_r8(7, R8::B),
            0x79 => Instruction::BIT_u3_r8(7, R8::C),
            0x7A => Instruction::BIT_u3_r8(7, R8::D),
            0x7B => Instruction::BIT_u3_r8(7, R8::E),
            0x7C => Instruction::BIT_u3_r8(7, R8::H),
            0x7D => Instruction::BIT_u3_r8(7, R8::L),
            0x7E => todo!(), // Instruction::BIT_u3_mHL(7),
            0x7F => Instruction::BIT_u3_r8(7, R8::A),

            0x80 => todo!(),
            0x81 => todo!(),
            0x82 => todo!(),
            0x83 => todo!(),
            0x84 => todo!(),
            0x85 => todo!(),
            0x86 => todo!(),
            0x87 => todo!(),
            0x88 => todo!(),
            0x89 => todo!(),
            0x8A => todo!(),
            0x8B => todo!(),
            0x8C => todo!(),
            0x8D => todo!(),
            0x8E => todo!(),
            0x8F => todo!(),

            0x90 => todo!(),
            0x91 => todo!(),
            0x92 => todo!(),
            0x93 => todo!(),
            0x94 => todo!(),
            0x95 => todo!(),
            0x96 => todo!(),
            0x97 => todo!(),
            0x98 => todo!(),
            0x99 => todo!(),
            0x9A => todo!(),
            0x9B => todo!(),
            0x9C => todo!(),
            0x9D => todo!(),
            0x9E => todo!(),
            0x9F => todo!(),

            0xA0 => todo!(),
            0xA1 => todo!(),
            0xA2 => todo!(),
            0xA3 => todo!(),
            0xA4 => todo!(),
            0xA5 => todo!(),
            0xA6 => todo!(),
            0xA7 => todo!(),
            0xA8 => todo!(),
            0xA9 => todo!(),
            0xAA => todo!(),
            0xAB => todo!(),
            0xAC => todo!(),
            0xAD => todo!(),
            0xAE => todo!(),
            0xAF => todo!(),

            0xB0 => todo!(),
            0xB1 => todo!(),
            0xB2 => todo!(),
            0xB3 => todo!(),
            0xB4 => todo!(),
            0xB5 => todo!(),
            0xB6 => todo!(),
            0xB7 => todo!(),
            0xB8 => todo!(),
            0xB9 => todo!(),
            0xBA => todo!(),
            0xBB => todo!(),
            0xBC => todo!(),
            0xBD => todo!(),
            0xBE => todo!(),
            0xBF => todo!(),

            0xC0 => todo!(),
            0xC1 => todo!(),
            0xC2 => todo!(),
            0xC3 => todo!(),
            0xC4 => todo!(),
            0xC5 => todo!(),
            0xC6 => todo!(),
            0xC7 => todo!(),
            0xC8 => todo!(),
            0xC9 => todo!(),
            0xCA => todo!(),
            0xCB => todo!(),
            0xCC => todo!(),
            0xCD => todo!(),
            0xCE => todo!(),
            0xCF => todo!(),

            0xD0 => todo!(),
            0xD1 => todo!(),
            0xD2 => todo!(),
            0xD3 => todo!(),
            0xD4 => todo!(),
            0xD5 => todo!(),
            0xD6 => todo!(),
            0xD7 => todo!(),
            0xD8 => todo!(),
            0xD9 => todo!(),
            0xDA => todo!(),
            0xDB => todo!(),
            0xDC => todo!(),
            0xDD => todo!(),
            0xDE => todo!(),
            0xDF => todo!(),

            0xE0 => todo!(),
            0xE1 => todo!(),
            0xE2 => todo!(),
            0xE3 => todo!(),
            0xE4 => todo!(),
            0xE5 => todo!(),
            0xE6 => todo!(),
            0xE7 => todo!(),
            0xE8 => todo!(),
            0xE9 => todo!(),
            0xEA => todo!(),
            0xEB => todo!(),
            0xEC => todo!(),
            0xED => todo!(),
            0xEE => todo!(),
            0xEF => todo!(),

            0xF0 => todo!(),
            0xF1 => todo!(),
            0xF2 => todo!(),
            0xF3 => todo!(),
            0xF4 => todo!(),
            0xF5 => todo!(),
            0xF6 => todo!(),
            0xF7 => todo!(),
            0xF8 => todo!(),
            0xF9 => todo!(),
            0xFA => todo!(),
            0xFB => todo!(),
            0xFC => todo!(),
            0xFD => todo!(),
            0xFE => todo!(),
            0xFF => todo!(),
        },
        0xCC => Instruction::CALL_cc_u16(Condition::Z, next_imm16(&mut bytes_read)),
        0xCD => Instruction::CALL_a16(next_imm16(&mut bytes_read)),
        0xCE => Instruction::ADC_A_u8(next_u8(&mut bytes_read)),
        0xCF => Instruction::RST(Immediate16::from_u16(Wrapping(0x0008))),

        0xD0 => Instruction::RET_cc(Condition::NC),
        0xD1 => Instruction::POP_r16(R16::DE),
        0xD2 => Instruction::JP_cc_u16(Condition::NC, next_imm16(&mut bytes_read)),
        0xD3 => todo!(),
        0xD4 => Instruction::CALL_cc_u16(Condition::NC, next_imm16(&mut bytes_read)),
        0xD5 => Instruction::PUSH_r16(R16::DE),
        0xD6 => Instruction::SUB_A_u8(next_u8(&mut bytes_read)),
        0xD7 => Instruction::RST(Immediate16::from_u16(Wrapping(0x0010))),
        0xD8 => Instruction::RET_cc(Condition::C),
        0xD9 => Instruction::RETI,
        0xDA => Instruction::JP_cc_u16(Condition::C, next_imm16(&mut bytes_read)),
        0xDB => todo!(),
        0xDC => Instruction::CALL_cc_u16(Condition::C, next_imm16(&mut bytes_read)),
        0xDD => todo!(),
        0xDE => Instruction::SBC_A_u8(next_u8(&mut bytes_read)),
        0xDF => Instruction::RST(Immediate16::from_u16(Wrapping(0x0018))),

        0xE0 => Instruction::LD_FFu8_A(next_u8(&mut bytes_read)),
        0xE1 => Instruction::POP_r16(R16::HL),
        0xE2 => Instruction::LD_FFC_A,
        0xE3 => todo!(),
        0xE4 => todo!(),
        0xE5 => Instruction::PUSH_r16(R16::HL),
        0xE6 => Instruction::AND_u8(next_u8(&mut bytes_read)),
        0xE7 => Instruction::RST(Immediate16::from_u16(Wrapping(0x0020))),
        0xE8 => Instruction::ADD_SP_i8(next_i8(&mut bytes_read)),
        0xE9 => Instruction::JP_HL,
        0xEA => Instruction::LD_mu16_A(next_imm16(&mut bytes_read)),
        0xEB => todo!(),
        0xEC => todo!(),
        0xED => todo!(),
        0xEE => Instruction::XOR_A_u8(next_u8(&mut bytes_read)),
        0xEF => Instruction::RST(Immediate16::from_u16(Wrapping(0x0028))),

        0xF0 => Instruction::LD_A_FFu8(next_u8(&mut bytes_read)),
        0xF1 => Instruction::POP_r16(R16::AF),
        0xF2 => Instruction::LD_A_FFC,
        0xF3 => Instruction::DI,
        0xF4 => todo!(),
        0xF5 => Instruction::PUSH_r16(R16::AF),
        0xF6 => Instruction::OR_A_u8(next_u8(&mut bytes_read)),
        0xF7 => Instruction::RST(Immediate16::from_u16(Wrapping(0x0030))),
        0xF8 => Instruction::LD_HL_SP_i8(next_i8(&mut bytes_read)),
        0xF9 => Instruction::LD_SP_HL,
        0xFA => Instruction::LD_A_mu16(next_imm16(&mut bytes_read)),
        0xFB => Instruction::EI,
        0xFC => todo!(),
        0xFD => todo!(),
        0xFE => Instruction::CP_A_u8(next_u8(&mut bytes_read)),
        0xFF => Instruction::RST(Immediate16::from_u16(Wrapping(0x0038))),
    };
    Ok(DecodedInstruction {
        address: address,
        instruction: i,
        instruction_size: bytes_read as u8,
        raw: machine.read_range(address, bytes_read as usize).into(),
    })
}
